trigger:
 branches:
   include:
     - main
 paths:
  exclude:
    - README.md
    

pool:
  name: 'Default'

variables:
  isMainBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
  - stage: Build
    displayName: Build and Test
    jobs:
      - job:
        steps:

        - task: NuGetToolInstaller@1
          displayName: Install NuGet

        - task: NuGetCommand@2
          displayName: Restore Packages
          inputs:
            restoreSolution: '$(solution)'

        - task: VSBuild@1
          displayName: Build Solution
          inputs:
            solution: '$(solution)'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: Run Tests
          inputs:
            command: 'test'
            projects: '**/*Tests.csproj'
            testRunTitle: 'Test'

        - task: DotNetCoreCLI@2
          displayName: Create Preview Package $(PackageVersion)
          inputs:
            outputDir: '$(Build.ArtifactStagingDirectory)/preview'
            command: 'pack'
            packagesToPack: '**/ThatBlokeCalledJay.MediatR.Abstractions.csproj'
            includesymbols: true
            includesource: true
            versioningScheme: byEnvVar
            versionEnvVar: PackageRevisionVersion

        - task: PublishBuildArtifacts@1
          displayName: Publish Preview Package
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/preview'
            artifactName: preview
            publishLocation: Container

        - task: DotNetCoreCLI@2
          displayName: Build Release Package $(PackageVersion)
          inputs:
            command: pack
            outputDir: '$(Build.ArtifactStagingDirectory)/release'
            includesymbols: true
            includesource: true
            packagesToPack: '**/ThatBlokeCalledJay.MediatR.Abstractions.csproj'
            versioningScheme: byEnvVar
            versionEnvVar: PackageVersion

        - task: PublishBuildArtifacts@1
          displayName: Publish Release Package
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/release'
            artifactName: release
            publishLocation: Container


  - stage: PushRevision
    displayName: Publish Revision
    condition: and(succeeded(), eq(variables.isMainBranch, true))
    jobs:
      - deployment:
        environment: revision
        strategy:
          runOnce:
            deploy:
              steps:
              - download: none

              - task: DownloadPipelineArtifact@2
                displayName: "Download Preview Package"
                inputs:
                  source: current
                  path: '$(System.ArtifactsDirectory)'
                  artifact: "preview"

              - task: DotNetCoreCLI@2
                displayName: Push NuGet Package
                inputs:
                  command: 'push'
                  packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg;$(Build.ArtifactStagingDirectory)/*.snupkg'
                  nuGetFeedType: 'internal'
                  publishVstsFeed: '1a343071-4c92-42ed-8b42-1526a6b90483'

  - stage: PushRelease
    displayName: Push Release Package
    condition: and(succeeded(), eq(variables.isMainBranch, true))
    jobs:
      - deployment:
        environment: release
        strategy:
          runOnce:
            deploy:
              steps:
              - download: none

              - task: DownloadPipelineArtifact@2
                displayName: "Download Release Package"
                inputs:
                  source: current
                  path: '$(System.ArtifactsDirectory)'
                  artifact: "release"

              - task: DotNetCoreCLI@2
                displayName: Push Release Package
                inputs:
                  command: 'push'
                  packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg;$(Build.ArtifactStagingDirectory)/*.snupkg'
                  nuGetFeedType: 'internal'
                  publishVstsFeed: '1a343071-4c92-42ed-8b42-1526a6b90483'


# steps:
# - task: NuGetToolInstaller@1
#   displayName: Install NuGet

# - task: NuGetCommand@2
#   displayName: Restore Packages
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   displayName: Build Solution
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   displayName: Run Tests
#   inputs:
#     command: 'test'
#     projects: '**/*Tests.csproj'
#     testRunTitle: 'Test'

# - task: DotNetCoreCLI@2
#   displayName: Create NuGet Package $(PackageVersion)
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/ThatBlokeCalledJay.MediatR.Abstractions.csproj'
#     includesymbols: true
#     versioningScheme: 'byEnvVar'
#     versionEnvVar: 'PackageVersion'

# - task: DotNetCoreCLI@2
#   displayName: Push NuGet Package
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
#     nuGetFeedType: 'internal'
#     publishVstsFeed: '1a343071-4c92-42ed-8b42-1526a6b90483'

# - task: DotNetCoreCLI@2
#   displayName: Push NuGet Symbols
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/*.snupkg'
#     nuGetFeedType: 'internal'
#     publishVstsFeed: '1a343071-4c92-42ed-8b42-1526a6b90483'
